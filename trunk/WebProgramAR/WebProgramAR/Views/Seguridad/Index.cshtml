
@model WebProgramAR.Sitio.Models.SeguridadGrillaModel
@{  
    
    ViewBag.Title = "Configuración";

    WebGrid grid = new WebGrid(rowsPerPage: Model.CantidadPorPagina, canPage: false);

    grid.Bind(Model.ReglasSeguridad, autoSortAndPage: false, rowCount: Model.Cantidad);

    List<WebProgramAR.Entidades.Tabla> listaTabla = (List<WebProgramAR.Entidades.Tabla>)ViewBag.ListaTablas;
    List<WebProgramAR.Entidades.TipoUsuario> listaTipoUsuario = (List<WebProgramAR.Entidades.TipoUsuario>)ViewBag.ListaTipoUsuarios;
    
}

<script type="text/javascript">
    $(document).ready(function () {

        $("#filterSearchButton").live('click', function () {
            $("#filterForm").submit();
        });
        //para el manejo del menu
        $("#menu li").each(function (index) {
            if ($(this).children().html().toUpperCase() == "CONFIGURACION") {
                $(this).addClass("selected");
            } else {
                $(this).removeClass("selected");
            }
        });
        $('#btnFiltros').live('click', function (event) {
            if ($('#filtros').css('display') == 'block') {
                $('#filtros').fadeOut('slow');
            } else {
                $('#filtros').fadeIn('slow');
            }
        });
        $('#btnNuevo').click(function (event) {
            OpenDialog(event, '', '@Url.Action("Create")/', 460, 320);
        });

        $('.botonEliminar').click(function (event)
        { OpenDialog(event, $(this).attr('data'), '@Url.Action("Delete")/', 490, 380); });

        $('.botonEditar').click(function (event) {
            OpenDialog(event, $(this).attr('data'), '@Url.Action("Edit")/', 490, 500);
        });

        $('.botonDetalles').click(function (event) {
            OpenDialog(event, $(this).attr('data'), '@Url.Action("Details")/', 470, 350);
        });
        
        var sortcol = '@grid.SortColumn';

        if (sortcol != '')
            $('thead > tr > th > a[href*="sort=@grid.SortColumn"]').parent().addClass('@(grid.SortDirection == SortDirection.Descending ? "grid_sort_asc" : "grid_sort_desc")');

        
    });
</script>

<h1>Seguridad</h1>
<div id="buttonSection" class="buttonSection">

    <div id="btnNuevo" class="btn_nuevo boton" >Nuevo </div>

    <div id="btnFiltros" class="btn_filtros boton" >Filtros </div>
</div>    
<div id="filtros">
    <div class="tituloabm">Seleccion de Reglas</div>

    <div class="filtrosabm">
        @using (Html.BeginForm("Index", "Seguridad", FormMethod.Post, new { id = "filterForm" }))
        {    
            @Html.ValidationSummary(true)
            <table>
                <tr>
                    <td>
                        <div class="label">
                            Entidad
                        </div>
                    </td>
                     <td valign="top">
                            @Html.DropDownList("tabla", listaTabla.Select(option => new SelectListItem
                           {
                               Text = Html.DisplayTextFor(_ => option.Nombre).ToString(),
                               Value = option.TablaId.ToString()
                           }), "TODOS", new { @id = "tabla", @style = "display:none" })
                           <input type="hidden" name="tablaId" id="tablaId" value="" />
                    </td>
                    <td>
                        <div class="label">
                            Tipo de Usuario
                        </div>
                    </td>
                     <td valign="top">
                            @Html.DropDownList("tipoUsuario", listaTipoUsuario.Select(option => new SelectListItem
                            {
                                Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
                                Value = option.TipoUsuarioId.ToString()
                            }), "TODOS", new { @id = "tipoUsuario", @style = "display:none" })
                           <input type="hidden" name="tipoUsuarioId" id="tipoUsuarioId" value="" />
                    </td>
                    <td>
                        <div class="label">
                            Usuario
                        </div>
                    </td>
                     <td valign="top">
                            @Html.TextBox("usuario", null, new { maxlength = 50, autocomplete = "off" })
                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="label">
                            Habilitado
                        </div>
                    </td>
                     <td valign="top">
                            @Html.DropDownList("habilitada", new[] { new SelectListItem { Value = "0", Text = "No" }, new SelectListItem { Value = "1", Text = "Si" } }, "TODOS", new { @id = "habilitada", @style = "display:none" })
                           <input type="hidden" name="activa" id="activa" value="-1" />
                    </td>

                </tr>
                
            </table>
            <div id="filterSearchButton" class="filterButton"></div>
        }
    </div>
</div>


<div id="contenedor-grid">



@grid.GetHtml(
    tableStyle: "grid",
    fillEmptyRows: false,
    rowStyle: "gridRow",
    alternatingRowStyle: "gridAlternatingRow",
    headerStyle: "gridHeader",
    footerStyle: "gridPager",
    mode: WebGridPagerModes.All,
        firstText: "<<",
        previousText: "<",
    nextText: ">",
        lastText: " >>",
    columns: new[] {
    grid.Column("Tabla.Nombre", header: "Entidad"),
    grid.Column("Columna.Nombre", header: "Campo"),
    grid.Column("Comparador.Nombre", header: "Comparador"),
    grid.Column("Valor", header: "Valor"),
    grid.Column("Usuario", header: "Usuario", format: x => x.Usuario != null ? x.Usuario.UsuarioNombre : "Todos" ),
    grid.Column("TipoUsuario", header: "Tipo Usuario", format: x => x.TipoUsuario != null ? x.TipoUsuario.Descripcion : "Todos"),    
    grid.Column("Activa", header: "Habilitada", format: x => x.Activa ? "Si" : "No"),
   
   
    grid.Column("", 
          header: "",
          format: @<text>
                    <input type="image" alt="Detalles" src="@Url.Content("~/Content/images/preview-16.png")" data="@(item.ReglaId)" class="botonDetalles hoverRel"/>
                  </text>
    ),        
    grid.Column("", 
          header: "",
          format: @<text>
                    <input type="image" alt="Editar" src="@Url.Content("~/Content/images/edit_modify.png")" data="@(item.ReglaId)" class="botonEditar hoverRel"/>
                  </text>
    ),
    grid.Column("", 
          header: "",
          format: @<text>
                    <input type="image" alt="Eliminar" src="@Url.Content("~/Content/images/cancel_delete-16.png")" data="@(item.ReglaId)" class="botonEliminar hoverRel"/>
                    
                  </text>   
    )
})


</div>
<div id="dialog" class="dialogDiv" ></div>
<script type="text/javascript">
    convertSelect("tabla");
    convertSelect("tipoUsuario");
    convertSelect("habilitada");
    function OnChangeDo(div) {
        if (div.attr('id') == "tabla") {
            var tablaId = $("#selectBox_tabla").attr("rel");
            $("#tablaId").val(tablaId);
        }
        if (div.attr('id') == "tipoUsuario") {
            var tipoUsuarioId = $("#selectBox_tipoUsuario").attr("rel");
            $("#tipoUsuarioId").val(tipoUsuarioId);
        }
        if (div.attr('id') == "habilitada") {
            var habilitadaId = $("#selectBox_habilitada").attr("rel");
            $("#activa").val(habilitadaId);
        }
    }


</script>
