
@model WebProgramAR.Entidades.Usuario

@{
    List<WebProgramAR.Entidades.Pais> listaPaises = (List<WebProgramAR.Entidades.Pais>)ViewBag.Paises;
    List<WebProgramAR.Entidades.Provincia> listaProvincias = (List<WebProgramAR.Entidades.Provincia>)ViewBag.Provincias;
    List<WebProgramAR.Entidades.Localidad> listaLocalidades = (List<WebProgramAR.Entidades.Localidad>)ViewBag.Localidades;
    List<WebProgramAR.Entidades.TipoUsuario> listaTipoUsuario = (List<WebProgramAR.Entidades.TipoUsuario>)ViewBag.TipoUsuarios;
    ViewBag.Title = "Mi Perfil";
}



<h1>Mi Perfil</h1>
<div class="sectionSpace">
    @Html.HiddenFor(model => model.UsuarioId)

        <fieldset>
            <h3>Informacion de la Cuenta</h3>

            <div class="editor-label">
                @Html.LabelFor(m => m.UsuarioNombre)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.UsuarioNombre)
                @Html.ValidationMessageFor(m => m.UsuarioNombre)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email)
                @Html.ValidationMessageFor(m => m.Email)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Contrasena)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Contrasena)
                @Html.ValidationMessageFor(m => m.Contrasena)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmarContrasena)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmarContrasena)
                @Html.ValidationMessageFor(m => m.ConfirmarContrasena)
            </div>

            
        </fieldset>
    </div>
    <div class="sectionSpace">
        <div class="SameSectionSpace">
        <fieldset>
            <h3>Informacion del Usuario</h3>

            <div class="editor-label">
                @Html.LabelFor(m => m.Nombre)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Nombre)
                @Html.ValidationMessageFor(m => m.Nombre)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Apellido)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Apellido)
                @Html.ValidationMessageFor(m => m.Apellido)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.FechaNacimiento)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "date-picker-needed" })
                @Html.ValidationMessageFor(m => m.FechaNacimiento)
            </div>
        </fieldset>
        </div>
        <div class="SameSectionSpace">
        <fieldset>
            <div class="editor-label">
                @Html.LabelFor(m => m.TipoUsuario)
            </div>
            <div class="editor-field">
                 @Html.DropDownListFor(model => model.TipoUsuarioId, listaTipoUsuario.Select(option => new SelectListItem
                    {
                        Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
                        Value = option.TipoUsuarioId.ToString(),
                        Selected = ((Model != null) && (option.TipoUsuarioId == Model.TipoUsuarioId))
                    }), new { @id = "TipoUsuarioCreate" })

                    @Html.ValidationMessageFor(m => m.TipoUsuarioId)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Pais)
            </div>
            <div class="editor-field">
                

                 @Html.DropDownListFor(model => model.PaisId,
                                listaPaises.Select(option => new SelectListItem
                    {
                        Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
                        Value = option.PaisId.ToString(),
                        Selected = ((Model != null) && (option.PaisId == Model.PaisId))
                    }))

                @Html.ValidationMessageFor(m => m.PaisId)
            </div>
             <div id="listProvincias" style="display:none">
                <div class="editor-label">
                    @Html.LabelFor(m => m.Provincia)
                </div>
                <div class="editor-field">
                    

                    @Html.DropDownListFor(model => model.ProvinciaId,
                                        listaProvincias.Select(option => new SelectListItem
                    {
                        Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
                        Value = option.ProvinciaId.ToString(),
                        Selected = ((Model != null) && (option.ProvinciaId == Model.PaisId))
                    }))

                    @Html.ValidationMessageFor(m => m.ProvinciaId)
                </div>
            </div>
            <div  id="listLocalidades"  style="display:none">
                <div class="editor-label">
                    @Html.LabelFor(m => m.Localidad)
                </div>
                 <div class="editor-field">
                    @Html.TextBoxFor(model => model.LocalidadId, new { @Value = " " })
                    @Html.ValidationMessageFor(m => m.LocalidadId)
                </div>
            </div>

        </fieldset>
        </div>
    </div>

<div id="dialog" class="dialogDiv" ></div>
