//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace WebProgramAR.Entidades
{
    public partial class ReglasSeguridad
    {
        #region Primitive Properties
    
        public virtual int ReglaId
        {
            get;
            set;
        }
    
        public virtual string Valor
        {
            get;
            set;
        }
        public bool IsValorBool { get {
            string value = "False";
            bool b = bool.Parse(value);
            return bool.TryParse(Valor,out b); 
        } }
        public virtual int TablaId
        {
            get { return _tablaId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_tablaId != value)
                    {
                        if (Tabla != null && Tabla.TablaId != value)
                        {
                            Tabla = null;
                        }
                        _tablaId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _tablaId;
    
        public virtual Nullable<int> TipoUsuarioId
        {
            get { return _tipoUsuarioId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_tipoUsuarioId != value)
                    {
                        if (TipoUsuario != null && TipoUsuario.TipoUsuarioId != value)
                        {
                            TipoUsuario = null;
                        }
                        _tipoUsuarioId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _tipoUsuarioId;
    
        public virtual Nullable<int> UsuarioId
        {
            get { return _usuarioId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_usuarioId != value)
                    {
                        if (Usuario != null && Usuario.UsuarioId != value)
                        {
                            Usuario = null;
                        }
                        _usuarioId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _usuarioId;
    
        public virtual int ComparadorId
        {
            get { return _comparadorId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_comparadorId != value)
                    {
                        if (Comparador != null && Comparador.ComparadorId != value)
                        {
                            Comparador = null;
                        }
                        _comparadorId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _comparadorId;
    
        public virtual int ColumnaId
        {
            get { return _columnaId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_columnaId != value)
                    {
                        if (Columna != null && Columna.ColumnaId != value)
                        {
                            Columna = null;
                        }
                        _columnaId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _columnaId;
    
        public virtual bool Activa
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual Comparador Comparador
        {
            get { return _comparador; }
            set
            {
                if (!ReferenceEquals(_comparador, value))
                {
                    var previousValue = _comparador;
                    _comparador = value;
                    FixupComparador(previousValue);
                }
            }
        }
        private Comparador _comparador;
    
        public virtual Tabla Tabla
        {
            get { return _tabla; }
            set
            {
                if (!ReferenceEquals(_tabla, value))
                {
                    var previousValue = _tabla;
                    _tabla = value;
                    FixupTabla(previousValue);
                }
            }
        }
        private Tabla _tabla;
    
        public virtual TipoUsuario TipoUsuario
        {
            get { return _tipoUsuario; }
            set
            {
                if (!ReferenceEquals(_tipoUsuario, value))
                {
                    var previousValue = _tipoUsuario;
                    _tipoUsuario = value;
                    FixupTipoUsuario(previousValue);
                }
            }
        }
        private TipoUsuario _tipoUsuario;
    
        public virtual Usuario Usuario
        {
            get { return _usuario; }
            set
            {
                if (!ReferenceEquals(_usuario, value))
                {
                    var previousValue = _usuario;
                    _usuario = value;
                    FixupUsuario(previousValue);
                }
            }
        }
        private Usuario _usuario;
    
        public virtual Columna Columna
        {
            get { return _columna; }
            set
            {
                if (!ReferenceEquals(_columna, value))
                {
                    var previousValue = _columna;
                    _columna = value;
                    FixupColumna(previousValue);
                }
            }
        }
        private Columna _columna;

        public string Tipo { get; set; }
        #endregion
        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupComparador(Comparador previousValue)
        {
            if (previousValue != null && previousValue.ReglasSeguridads.Contains(this))
            {
                previousValue.ReglasSeguridads.Remove(this);
            }
    
            if (Comparador != null)
            {
                if (!Comparador.ReglasSeguridads.Contains(this))
                {
                    Comparador.ReglasSeguridads.Add(this);
                }
                if (ComparadorId != Comparador.ComparadorId)
                {
                    ComparadorId = Comparador.ComparadorId;
                }
            }
        }
    
        private void FixupTabla(Tabla previousValue)
        {
            if (previousValue != null && previousValue.ReglasSeguridads.Contains(this))
            {
                previousValue.ReglasSeguridads.Remove(this);
            }
    
            if (Tabla != null)
            {
                if (!Tabla.ReglasSeguridads.Contains(this))
                {
                    Tabla.ReglasSeguridads.Add(this);
                }
                if (TablaId != Tabla.TablaId)
                {
                    TablaId = Tabla.TablaId;
                }
            }
        }
    
        private void FixupTipoUsuario(TipoUsuario previousValue)
        {
            if (previousValue != null && previousValue.ReglasSeguridads.Contains(this))
            {
                previousValue.ReglasSeguridads.Remove(this);
            }
    
            if (TipoUsuario != null)
            {
                if (!TipoUsuario.ReglasSeguridads.Contains(this))
                {
                    TipoUsuario.ReglasSeguridads.Add(this);
                }
                if (TipoUsuarioId != TipoUsuario.TipoUsuarioId)
                {
                    TipoUsuarioId = TipoUsuario.TipoUsuarioId;
                }
            }
            else if (!_settingFK)
            {
                TipoUsuarioId = null;
            }
        }
    
        private void FixupUsuario(Usuario previousValue)
        {
            if (previousValue != null && previousValue.ReglasSeguridads.Contains(this))
            {
                previousValue.ReglasSeguridads.Remove(this);
            }
    
            if (Usuario != null)
            {
                if (!Usuario.ReglasSeguridads.Contains(this))
                {
                    Usuario.ReglasSeguridads.Add(this);
                }
                if (UsuarioId != Usuario.UsuarioId)
                {
                    UsuarioId = Usuario.UsuarioId;
                }
            }
            else if (!_settingFK)
            {
                UsuarioId = null;
            }
        }
    
        private void FixupColumna(Columna previousValue)
        {
            if (previousValue != null && previousValue.ReglasSeguridads.Contains(this))
            {
                previousValue.ReglasSeguridads.Remove(this);
            }
    
            if (Columna != null)
            {
                if (!Columna.ReglasSeguridads.Contains(this))
                {
                    Columna.ReglasSeguridads.Add(this);
                }
                if (ColumnaId != Columna.ColumnaId)
                {
                    ColumnaId = Columna.ColumnaId;
                }
            }
        }

        #endregion
    }
}
