//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace WebProgramAR.Entidades
{
    public partial class Curso
    {
        #region Primitive Properties
    
        public virtual int CursoId
        {
            get;
            set;
        }
    
        public virtual string Nombre
        {
            get;
            set;
        }
    
        public virtual System.DateTime FechaAlta
        {
            get;
            set;
        }
    
        public virtual int UsuarioId
        {
            get { return _usuarioId; }
            set
            {
                if (_usuarioId != value)
                {
                    if (Usuario != null && Usuario.UsuarioId != value)
                    {
                        Usuario = null;
                    }
                    _usuarioId = value;
                }
            }
        }
        private int _usuarioId;

        #endregion
        #region Navigation Properties
    
        public virtual Usuario Usuario
        {
            get { return _usuario; }
            set
            {
                if (!ReferenceEquals(_usuario, value))
                {
                    var previousValue = _usuario;
                    _usuario = value;
                    FixupUsuario(previousValue);
                }
            }
        }
        private Usuario _usuario;
    
        public virtual ICollection<Ejercicio> Ejercicios
        {
            get
            {
                if (_ejercicios == null)
                {
                    var newCollection = new FixupCollection<Ejercicio>();
                    newCollection.CollectionChanged += FixupEjercicios;
                    _ejercicios = newCollection;
                }
                return _ejercicios;
            }
            set
            {
                if (!ReferenceEquals(_ejercicios, value))
                {
                    var previousValue = _ejercicios as FixupCollection<Ejercicio>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEjercicios;
                    }
                    _ejercicios = value;
                    var newValue = value as FixupCollection<Ejercicio>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEjercicios;
                    }
                }
            }
        }
        private ICollection<Ejercicio> _ejercicios;

        #endregion
        #region Association Fixup
    
        private void FixupUsuario(Usuario previousValue)
        {
            if (previousValue != null && previousValue.Curso.Contains(this))
            {
                previousValue.Curso.Remove(this);
            }
    
            if (Usuario != null)
            {
                if (!Usuario.Curso.Contains(this))
                {
                    Usuario.Curso.Add(this);
                }
                if (UsuarioId != Usuario.UsuarioId)
                {
                    UsuarioId = Usuario.UsuarioId;
                }
            }
        }
    
        private void FixupEjercicios(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Ejercicio item in e.NewItems)
                {
                    if (!item.Cursos.Contains(this))
                    {
                        item.Cursos.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Ejercicio item in e.OldItems)
                {
                    if (item.Cursos.Contains(this))
                    {
                        item.Cursos.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
