@model WebProgramAR.Sitio.Models.EjercicioGrillaModel

@{
    Layout = null;
    ViewBag.Title = "Asociaciones";

    WebGrid gridCurso = new WebGrid(rowsPerPage: Model.CantidadPorPagina, canPage: false);
    WebGrid gridNotCurso = new WebGrid(rowsPerPage: Model.CantidadPorPagina, canPage: false);

    gridCurso.Bind(ViewBag.EjerciciosCurso, autoSortAndPage: true, rowCount: Model.Cantidad);

    gridNotCurso.Bind(ViewBag.EjerciciosNotCurso, autoSortAndPage: true, rowCount: Model.Cantidad);
    
    string funcionesAutorizadas = ViewBag.FuncionesAutorizadas;

    List<short> listaNivelesEjercicio = (List<short>)ViewBag.NivelesEjercicio;
    List<WebProgramAR.Entidades.EstadoEjercicio> listaEstadosEjercicio = (List<WebProgramAR.Entidades.EstadoEjercicio>)ViewBag.EstadosEjercicio;
}

<script type="text/javascript">
    $(document).ready(function () {

        $("#filterSearchButtonA").live('click', function () {
            $("#filterFormA").submit();
        });
        $("#filterSearchButtonNA").live('click', function () {
            $("#filterFormNA").submit();
        });
        $('#btnFiltrosAsociarA').live('click', function (event) {
            if ($('#filtrosAsociarA').css('display') == 'block') {
                $('#filtrosAsociarA').fadeOut('slow');
            } else {
                $('#filtrosAsociarA').fadeIn('slow');
            }
        });
        $('#btnFiltrosAsociarNA').live('click', function (event) {
            if ($('#filtrosAsociarNA').css('display') == 'block') {
                $('#filtrosAsociarNA').fadeOut('slow');
            } else {
                $('#filtrosAsociarNA').fadeIn('slow');
            }
        });
        $('.botonAsociar').click(function (event)
        { return false;});

        $('.botonDesasociar').click(function (event) { return false; });

        
        var sortcol = '@gridCurso.SortColumn';

        if (sortcol != '')
            $('thead > tr > th > a[href*="sort=@gridCurso.SortColumn"]').parent().addClass('@(gridCurso.SortDirection == SortDirection.Descending ? "grid_sort_asc" : "grid_sort_desc")');

        var sortcolNotCurso = '@gridNotCurso.SortColumn';

        if (sortcolNotCurso != '')
            $('thead > tr > th > a[href*="sort=@gridNotCurso.SortColumn"]').parent().addClass('@(gridNotCurso.SortDirection == SortDirection.Descending ? "grid_sort_asc" : "grid_sort_desc")');

        //FuncionesAutorizadas('@funcionesAutorizadas');
    });
</script>

<h2>Asociar Ejercicios</h2>
<legend>Curso</legend>
<!--*******************EJERCICIOS ASOCIADOS************************-->
<h1>Ejercicios Asociados</h1>
<div id="buttonSectionA" class="buttonSection">
    <div id="btnFiltrosAsociarA" class="btn_filtros boton" >Filtros </div>
</div>

<div id="filtrosAsociarA" class="filtros">
    <div class="tituloabm">Seleccion de cursos</div>

    <div class="filtrosabm">
        @using (Html.BeginForm("AsociarCursoEjercicio", "Ejercicio", FormMethod.Post, new { id = "filterFormA" }))
        {    
            @Html.ValidationSummary(true)
            <table>
                <tr>
                    <td><div class="label">Nombre</div></td>
                    <td valign="top">@Html.TextBox("nombreA", null, new { maxlength = 50, autocomplete = "off" })</td>
                    <td><div class="label">Estado</div></td>
                    <td valign="top">               
                         @Html.DropDownList("estadoEjercicioA", listaEstadosEjercicio.Select(option => new SelectListItem
                    {
                        Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
                        Value = option.EstadoEjercicioId.ToString()
                    }), new { @style = "display:none" })
                    </td>
                    <td><div class="label">Nivel</div></td>
                    <td valign="top">               
                         @Html.DropDownList("nivelEjercicioA", listaNivelesEjercicio.Select(option => new SelectListItem
                    {
                        Text = Html.DisplayTextFor(_ => option).ToString(),
                        Value = option.ToString()
                    }), new { @style = "display:none" }
                    )
                    </td>
                </tr>
            </table>
            <div id="filterSearchButtonA" class="filterButton"></div>
        }
    </div>
</div>
    

<div id="contenedor-gridA">

    @gridCurso.GetHtml(
        tableStyle: "grid",
        fillEmptyRows: false,
        rowStyle: "gridRow",
        alternatingRowStyle: "gridAlternatingRow",
        headerStyle: "gridHeader",
        footerStyle: "gridPager",
        mode: WebGridPagerModes.All,
            firstText: "<<",
            previousText: "<",
        nextText: ">",
            lastText: " >>",
        columns: new[] {
        gridCurso.Column("EjercicioId", header: "Identificador"),
        gridCurso.Column("Enunciado", header: "Enunciado"),
        gridCurso.Column("NivelEjercicio", header: "Nivel"),
        gridCurso.Column("Usuario.UsuarioNombre", header: "Usuario"),        
        gridCurso.Column("", 
              header: "",
              format: @<text>
                        <input type="image" alt="Desasociar" src="@Url.Content("~/Content/images/remove.png")" data="@(item.EjercicioId)" class="botonDesasociar hoverRel"/>
                      </text>
        )
    })

</div>
<div id="dialog" class="dialogDiv" ></div>
<script type="text/javascript">
    $("<option value='0' selected='selected'>TODOS</option>").prependTo("#nivelEjercicioA");
    $("<option value='0' selected='selected'>TODOS</option>").prependTo("#estadoEjercicioA");
    convertSelect("nivelEjercicioA",1);
    convertSelect("estadoEjercicioA",1);
    function OnChangeDo() { return false; }
</script>

<!--*******************EJERCICIOS NO ASOCIADOS************************-->
<h1>Ejercicios No Asociados</h1>
<div id="buttonSectionNA" class="buttonSection">
    <div id="btnFiltrosAsociarNA" class="btn_filtros boton" >Filtros </div>
</div>

<div id="filtrosAsociarNA" class="filtros">
    <div class="tituloabm">Seleccion de cursos</div>

    <div class="filtrosabm">
        @using (Html.BeginForm("AsociarCursoEjercicio", "Ejercicio", FormMethod.Post, new { id = "filterFormNA" }))
        {    
            @Html.ValidationSummary(true)
            <table>
                <tr>
                    <td><div class="label">Nombre</div></td>
                    <td valign="top">@Html.TextBox("nombreNA", null, new { maxlength = 50, autocomplete = "off" })</td>
                    <td><div class="label">Estado</div></td>
                    <td valign="top">               
                         @Html.DropDownList("estadoEjercicioNA", listaEstadosEjercicio.Select(option => new SelectListItem
                    {
                        Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
                        Value = option.EstadoEjercicioId.ToString()
                    }), new { @style = "display:none" })
                    </td>
                    <td><div class="label">Nivel</div></td>
                    <td valign="top">               
                         @Html.DropDownList("nivelEjercicioNA", listaNivelesEjercicio.Select(option => new SelectListItem
                    {
                        Text = Html.DisplayTextFor(_ => option).ToString(),
                        Value = option.ToString()
                    }), new { @style = "display:none" }
                    )
                    </td>
                </tr>
            </table>
            <div id="filterSearchButtonNA" class="filterButton"></div>
        }
    </div>
</div>
    

<div id="contenedor-gridNA">

    @gridNotCurso.GetHtml(
        tableStyle: "grid",
        fillEmptyRows: false,
        rowStyle: "gridRow",
        alternatingRowStyle: "gridAlternatingRow",
        headerStyle: "gridHeader",
        footerStyle: "gridPager",
        mode: WebGridPagerModes.All,
            firstText: "<<",
            previousText: "<",
        nextText: ">",
            lastText: " >>",
        columns: new[] {
        gridNotCurso.Column("EjercicioId", header: "Identificador"),
        gridNotCurso.Column("Enunciado", header: "Enunciado"),
        gridNotCurso.Column("NivelEjercicio", header: "Nivel"),
        gridNotCurso.Column("Usuario.UsuarioNombre", header: "Usuario"),        
        gridNotCurso.Column("", 
              header: "",
              format: @<text>
                        <input type="image" alt="Asociar" src="@Url.Content("~/Content/images/append.png")" data="@(item.EjercicioId)" class="botonDesasociar hoverRel"/>
                      </text>
        )
    })

</div>
<div id="dialog" class="dialogDiv" ></div>
<script type="text/javascript">
    $("<option value='0' selected='selected'>TODOS</option>").prependTo("#nivelEjercicioNA");
    $("<option value='0' selected='selected'>TODOS</option>").prependTo("#estadoEjercicioNA");
    convertSelect("nivelEjercicioNA", 1);
    convertSelect("estadoEjercicioNA", 1);
</script>

