@model WebProgramAR.Sitio.Models.EjercicioGrillaModel

@{
    Layout = null;
    ViewBag.Title = "Asociaciones";

    WebGrid grid = new WebGrid(rowsPerPage: Model.CantidadPorPagina, canPage: false);

    grid.Bind(Model.Ejercicios, autoSortAndPage: true, rowCount: Model.Cantidad);

    string funcionesAutorizadas = ViewBag.FuncionesAutorizadas;

    List<WebProgramAR.Entidades.NivelEjercicio> listaNivelesEjercicio = (List<WebProgramAR.Entidades.NivelEjercicio>)ViewBag.NivelesEjercicio;
    List<WebProgramAR.Entidades.EstadoEjercicio> listaEstadosEjercicio = (List<WebProgramAR.Entidades.EstadoEjercicio>)ViewBag.EstadosEjercicio;
}

<script type="text/javascript">
    $(document).ready(function () {

        $("#filterSearchButton").live('click', function () {
            $("#filterForm").submit();
        });
        $('#btnFiltrosAsociar').live('click', function (event) {
            if ($('#filtrosAsociar').css('display') == 'block') {
                $('#filtrosAsociar').fadeOut('slow');
            } else {
                $('#filtrosAsociar').fadeIn('slow');
            }
        });
        
        $('.botonAsociar').click(function (event)
        { return false;});

        $('.botonDesasociar').click(function (event) { return false; });

        
        var sortcol = '@grid.SortColumn';

        if (sortcol != '')
            $('thead > tr > th > a[href*="sort=@grid.SortColumn"]').parent().addClass('@(grid.SortDirection == SortDirection.Descending ? "grid_sort_asc" : "grid_sort_desc")');

        //FuncionesAutorizadas('@funcionesAutorizadas');
    });
</script>

<h2>Asociar Ejercicios</h2>
<legend>Curso</legend>
<!--<h2>Ejercicios</h2>-->
<div id="buttonSection" class="buttonSection">
    <div id="btnFiltrosAsociar" class="btn_filtros boton" >Filtros </div>
</div>

<div id="filtrosAsociar" class="filtros">
    <div class="tituloabm">Seleccion de cursos</div>

    <div class="filtrosabm">
        @using (Html.BeginForm("AsociarCursoEjercicio", "Ejercicio", FormMethod.Post, new { id = "filterForm" }))
        {    
            @Html.ValidationSummary(true)
            <table>
                <tr>
                    <td><div class="label">Nombre</div></td>
                    <td valign="top">@Html.TextBox("nombre", null, new { maxlength = 50, autocomplete = "off" })</td>
                    <td><div class="label">Estado</div></td>
                    <td valign="top">               
                         @Html.DropDownList("estadoEjercicio", listaEstadosEjercicio.Select(option => new SelectListItem
                    {
                        Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
                        Value = option.EstadoEjercicioId.ToString()
                    }))
                    </td>
                </tr>
                <tr>
                    <td><div class="label">Nivel</div></td>
                    <td valign="top">               
                         @Html.DropDownList("nivelEjercicio", listaNivelesEjercicio.Select(option => new SelectListItem
                    {
                        Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
                        Value = option.NivelEjercicioId.ToString()
                    })
                    )
                    </td>
                    <td><div class="label">Relacionado</div></td>
                    <td valign="top">               
                    @Html.DropDownList("Asociado_NoAsociado", new SelectList(
                              new List<Object>{ 
                                   new { value = 0 , text = "TODOS"  },
                                   new { value = 1 , text = "ASOCIADO" },
                                   new { value = 2 , text = "NO ASOCIADO"}
                                },
                              "value",
                              "text"
                       ))
                    </td>
                </tr>
            </table>
            <div id="filterSearchButton" class="filterButton"></div>
        }
    </div>
</div>
    

<div id="contenedor-grid">

    @grid.GetHtml(
        tableStyle: "grid",
        fillEmptyRows: false,
        rowStyle: "gridRow",
        alternatingRowStyle: "gridAlternatingRow",
        headerStyle: "gridHeader",
        footerStyle: "gridPager",
        mode: WebGridPagerModes.All,
            firstText: "<<",
            previousText: "<",
        nextText: ">",
            lastText: " >>",
        columns: new[] {
        grid.Column("EjercicioId", header: "Identificador"),
        grid.Column("Enunciado", header: "Enunciado"),
        grid.Column("NivelEjercicio.Descripcion", header: "Nivel"),
        grid.Column("Usuario.UsuarioNombre", header: "Usuario"),        
        grid.Column("", 
              header: "",
              format: @<text>
                        <input type="image" alt="Detalles" src="@Url.Content("~/Content/images/ok_icon.png")" data="@(item.EjercicioId)" class="botonDesasociar hoverRel"/>
                      </text>
        ),        
        grid.Column("", 
              header: "",
              format: @<text>
                        <input type="image" alt="Editar" src="@Url.Content("~/Content/images/no_icon.png")" data="@(item.EjercicioId)" class="botonAsociar hoverRel"/>
                      </text>
        )
    })

</div>
<div id="dialog" class="dialogDiv" ></div>
<script type="text/javascript">
    $("<option value='0' selected='selected'>TODOS</option>").prependTo("#nivelEjercicio");
    $("<option value='0' selected='selected'>TODOS</option>").prependTo("#estadoEjercicio");
    convertSelect("nivelEjercicio",1);
    convertSelect("estadoEjercicio",1);
    convertSelect("Asociado_NoAsociado",1);
    function OnChangeDo() { return false; }
</script>
