@model WebProgramAR.Entidades.Ejercicio
@{
    
    List<WebProgramAR.Entidades.NivelEjercicio> listaNiveles = (List<WebProgramAR.Entidades.NivelEjercicio>)ViewBag.NivelesEjercicio;
}
<div class="editor-label">
     @Html.LabelFor(model => model.Nombre)
</div>

<div class="editor-field">
    @Html.EditorFor(model => model.Nombre)
    @Html.ValidationMessageFor(model => model.Nombre)
</div>
<div class="editor-label">
    @Html.LabelFor(m => m.NivelEjercicio)
</div>
<div class="editor-field">
        @Html.DropDownListFor(model => model.NivelEjercicioId, listaNiveles.Select(option => new SelectListItem
        {
            Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
            Value = option.NivelEjercicioId.ToString(),
            Selected = ((Model != null) && (option.NivelEjercicioId == Model.NivelEjercicioId))
        }), new { @id = "NivelEjercicioCreate" })

        @Html.ValidationMessageFor(m => m.NivelEjercicio)
</div>

<div id="fieldsOnDemand">
    <div class="editor-label">
         @Html.LabelFor(model => model.Solucion)
    </div>
    <div class="editor-field">
        <div class="likeText" id="solucion"></div>
        <div class="buttonInputFile" rel="solucion">Seleccionar Archivo</div>
    </div>
    <div class="editor-label">
         @Html.LabelFor(model => model.Enunciado)
    </div>
    <div class="editor-field">
        @Html.DisplayFor(model => model.Enunciado)
    </div>
    
    <div class="editor-label">
         @Html.LabelFor(model => model.SolucionTexto)
    </div>
    <div class="editor-field">
        @Html.DisplayFor(model => model.SolucionTexto)
    </div>
     <div class="editor-label">
         @Html.LabelFor(model => model.Usuario)
    </div>
    <div class="editor-field">
        @Html.DisplayFor(model => model.Usuario.UsuarioNombre)
    </div>


</div>
<script type="text/javascript">
    convertSelect("NivelEjercicioCreate");
    function OnChangeDo(div) { return false; }
</script>