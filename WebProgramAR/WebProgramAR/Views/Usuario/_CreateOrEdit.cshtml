@model WebProgramAR.Entidades.Usuario
@{
    
    List<WebProgramAR.Entidades.Pais> listaPaises = (List<WebProgramAR.Entidades.Pais>)ViewBag.Paises;
    List<WebProgramAR.Entidades.Provincia> listaProvincias = (List<WebProgramAR.Entidades.Provincia>)ViewBag.Provincias;
    List<WebProgramAR.Entidades.Localidad> listaLocalidades = (List<WebProgramAR.Entidades.Localidad>)ViewBag.Localidades;
    List<WebProgramAR.Entidades.TipoUsuario> listaTipoUsuario = (List<WebProgramAR.Entidades.TipoUsuario>)ViewBag.TipoUsuarios;
}
<div class="sectionSpace">
 @*   @Html.HiddenFor(model => model.UsuarioId)*@

        <fieldset>
            <h3>Informacion de la Cuenta</h3>
         
                <div class="editor-label">
                    @Html.LabelFor(m => m.UsuarioNombre)
                </div>
                <div class="editor-field">
                    @if (Model == null)
                    {
                        @Html.TextBoxFor(m => m.UsuarioNombre)
                        @Html.ValidationMessageFor(m => m.UsuarioNombre)
                    }
                    else
                    {
                        @Html.HiddenFor(m => m.UsuarioNombre)
                        @Html.TextBox("TextBoxNombreUsuarioAux",Model.UsuarioNombre,new { disabled = "disabled" })
                    }
                </div>
        
            <div class="editor-label">
                @Html.LabelFor(m => m.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email)
                @Html.ValidationMessageFor(m => m.Email)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Contrasena)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Contrasena)
                @Html.ValidationMessageFor(m => m.Contrasena)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmarContrasena)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmarContrasena)
                @Html.ValidationMessageFor(m => m.ConfirmarContrasena)
            </div>

            
        </fieldset>
    </div>
    <div class="sectionSpace">
        <div class="SameSectionSpace">
        <fieldset>
            <h3>Informacion del Usuario</h3>

            <div class="editor-label">
                @Html.LabelFor(m => m.Nombre)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Nombre)
                @Html.ValidationMessageFor(m => m.Nombre)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.Apellido)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Apellido)
                @Html.ValidationMessageFor(m => m.Apellido)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.FechaNacimiento)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "date-picker-needed" })
                @Html.ValidationMessageFor(m => m.FechaNacimiento)
            </div>
        </fieldset>
        </div>
        <div class="SameSectionSpace">
        <fieldset>
            @if (ViewBag.EsRegister == null || ViewBag.EsRegister == false)
            {
                <div class="editor-label">
                    @Html.LabelFor(m => m.TipoUsuario)
                </div>
                <div class="editor-field">
                     @Html.DropDownListFor(model => model.TipoUsuarioId, listaTipoUsuario.Select(option => new SelectListItem
                {
                    Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
                    Value = option.TipoUsuarioId.ToString(),
                    Selected = ((Model != null) && (option.TipoUsuarioId == Model.TipoUsuarioId))
                }), new { @id = "TipoUsuarioCreate" })

                        @Html.ValidationMessageFor(m => m.TipoUsuarioId)
                </div>
            }
            else
            {
                if (Model != null)
                {
                    @Html.HiddenFor(model => model.TipoUsuarioId)
                }
                else
                {
                    @Html.Hidden("TipoUsuarioId", -1)
                }
            }
            <div class="editor-label">
                @Html.LabelFor(m => m.Pais)
            </div>
            <div class="editor-field">
                

                 @Html.DropDownListFor(model => model.PaisId,
                                listaPaises.Select(option => new SelectListItem
                                {
                                    Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
                                    Value = option.PaisId.ToString(),
                                    Selected = ((Model != null) && (option.PaisId == Model.PaisId))
                                }))

                @Html.ValidationMessageFor(m => m.PaisId)
            </div>
             <div id="listProvincias" style="display:none">
                <div class="editor-label">
                    @Html.LabelFor(m => m.Provincia)
                </div>
                <div class="editor-field">
                    

                    @Html.DropDownListFor(model => model.ProvinciaId,
                                        listaProvincias.Select(option => new SelectListItem
                                        {
                                            Text = Html.DisplayTextFor(_ => option.Descripcion).ToString(),
                                            Value = option.ProvinciaId.ToString(),
                                            Selected = ((Model != null) && (option.ProvinciaId == Model.PaisId))
                                        }))

                    @Html.ValidationMessageFor(m => m.ProvinciaId)
                </div>
            </div>
            <div  id="listLocalidades"  style="display:none">
                <div class="editor-label">
                    @Html.LabelFor(m => m.Localidad)
                </div>
                 <div class="editor-field">
                    @Html.TextBoxFor(model => model.LocalidadId, new { @Value = " " })
                    @Html.ValidationMessageFor(m => m.LocalidadId)
                </div>
            </div>

        </fieldset>
        </div>
    </div>
<script type="text/javascript">
    convertSelect("PaisId");
    convertSelect("TipoUsuarioCreate");
    convertSelect("ProvinciaId");
    $("#FechaNacimiento").datepicker();

    function OnChangeDo(div) {
        if (div.attr('id') == "PaisId") {
            var pais = $("#selectBox_PaisId").attr("rel");
            $.ajax({
                url: '@Url.Action("GetProvinciasByPais")',
                data: " { paisId: '" + pais + "'}",
                contentType: 'application/json',
                type: 'POST',
                dataType: 'json',
                success: function (data) {
                    $("#listProvincias .tzSelect").remove();
                    $("#ProvinciaId").children().remove();
                    var provincias = (typeof data) == 'string' ? eval('(' + data + ')') : data;
                    for (var i = 0; i < provincias.length; i++) {
                        var val = provincias[i].Id;
                        var text = provincias[i].Value;
                        $("#ProvinciaId").get(0).options[$("#ProvinciaId").get(0).options.length] = new Option(text, val);
                    }

                    convertSelect("ProvinciaId");
                }
            });
            $("#listProvincias").show();
            return;
        }
        if (div.attr('id') == "ProvinciaId") {
            $("#listLocalidades").show();
            return;
        }
    }

    $("#LocalidadId").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetLocalidadesByLocalidadByProvinciaByPais")',
                data: " { paisId: '" + $("#selectBox_PaisId").attr("rel") + "', provinciaId: '" + $("#selectBox_ProvinciaId").attr("rel") + "', Localidad: '" + request.term + "' }",
                contentType: 'application/json',
                type: 'POST',
                dataType: 'json',
                success: function (data) {
                    response($.map(data, function (item) {
                        return {
                            label: item.Value,
                            value: item.Id
                        }
                    }));
                }
            })

        },
        scrollHeight: 30,
        minChars: 1,
        delay: 100,
        type: 'POST',
        selectFirst: false,
        select: function (event, ui) {
            $("#LocalidadId").text(ui.item.label);
            $("#LocalidadId").attr("value", ui.item.label);
        },
        change: function (event, ui) {
        if (ui.item!=undefined)
            $("#LocalidadId").val(ui.item.label);
        }
    });
            
</script>
