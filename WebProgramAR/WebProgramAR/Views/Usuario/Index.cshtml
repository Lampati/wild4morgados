
@model WebProgramAR.Sitio.Models.UsuarioGrillaModel

@{
    ViewBag.Title = "Usuarios";

    WebGrid grid = new WebGrid(rowsPerPage: Model.CantidadPorPagina, canPage: false);

    grid.Bind(Model.Usuarios, autoSortAndPage: true, rowCount: Model.Cantidad);

    string funcionesAutorizadas = ViewBag.FuncionesAutorizadas;
}
<script type="text/javascript">
    $(document).ready(function () {

        $("#filterSearchButton").live('click', function () {
            $("#filterForm").submit();
        });
        //para el manejo del menu
        $("#menu li").each(function (index) {
            if ($(this).children().html().toUpperCase() == "UsuarioS") {
                $(this).addClass("selected");
            } else {
                $(this).removeClass("selected");
            }
        });
        $('#btnFiltros').live('click', function (event) {
            if ($('#filtros').css('display') == 'block') {
                $('#filtros').fadeOut('slow');
            } else {
                $('#filtros').fadeIn('slow');
            }
        });
        $('#btnNuevo').click(function (event) {
            OpenDialog(event, '', '@Url.Action("Create")/', 900, 480);
        });

        $('.botonEliminar').click(function (event)
        { OpenDialog(event, $(this).attr('data'), '@Url.Action("Delete")/', 500, 400); });

        $('.botonEditar').click(function (event) {
            OpenDialog(event, $(this).attr('data'), '@Url.Action("Edit")/', 900, 400);
        });

        $('.botonResetearPass').click(function (event) {
            OpenDialog(event, $(this).attr('data'), '@Url.Action("ResetPassword","Account")/', 900, 480);
        });

        $('.botonDetalles').click(function (event) {
            OpenDialog(event, $(this).attr('data'), '@Url.Action("Details")/', 500, 400);
        });
        var sortcol = '@grid.SortColumn';

        if (sortcol != '')
            $('thead > tr > th > a[href*="sort=@grid.SortColumn"]').parent().addClass('@(grid.SortDirection == SortDirection.Descending ? "grid_sort_asc" : "grid_sort_desc")');

        //FuncionesAutorizadas('@funcionesAutorizadas');
    });
</script>

<h1>Usuarios</h1>
<div id="buttonSection" class="buttonSection">
     @if (Request.IsAuthenticated && (HttpContext.Current.User.IsInRole("administrador")))
     {
        <div id="btnNuevo" class="btn_nuevo boton" >Nuevo </div>
     }
    <div id="btnFiltros" class="btn_filtros boton" >Filtros </div>
</div>

<div id="filtros">
    <div class="tituloabm">Seleccion de Usuarios</div>

    <div class="filtrosabm">
        @using (Html.BeginForm("Index", "Usuario", FormMethod.Post, new { id = "filterForm" }))
        {    
            @Html.ValidationSummary(true)
            <table>
                <tr>
                    <td>
                        <div class="label">
                            Nombre
                        </div>
                    </td>
                     <td valign="top">
                            @Html.TextBox("Nombre", null, new { maxlength = 50, autocomplete = "off" })
                    </td>
                    <td>
                        <div class="label">
                            Apellido
                        </div>
                    </td>
                     <td valign="top">
                            @Html.TextBox("Apellido", null, new { maxlength = 50, autocomplete = "off" })
                    </td>
                    <td><div class="label">Tipo Usuario</div></td>
                    <td valign="top">@Html.DropDownListFor(m => m.TipoUsuario, (SelectList)ViewBag.TipoUsuarios)</td>
                </tr>
                
            </table>
            <div id="filterSearchButton" class="filterButton"></div>
        }
    </div>
</div>
    

<div id="contenedor-grid">

@if (Request.IsAuthenticated && (HttpContext.Current.User.IsInRole("administrador")))
{

    @grid.GetHtml(
        tableStyle: "grid",
        fillEmptyRows: false,
        rowStyle: "gridRow",
        alternatingRowStyle: "gridAlternatingRow",
        headerStyle: "gridHeader",
        footerStyle: "gridPager",
        mode: WebGridPagerModes.All,
            firstText: "<<",
            previousText: "<",
        nextText: ">",
            lastText: " >>",
        columns: new[] {
        grid.Column("Nombre", header: "Nombre"),
        grid.Column("Apellido", header: "Apellido"),
        grid.Column("TipoUsuario.Descripcion", header: "TipoUsuarioId"),
   
        grid.Column("", 
              header: "",
              format: @<text>
                        <input type="image" alt="Detalles" src="@Url.Content("~/Content/images/preview-16.png")" data="@(item.UsuarioId)" class="botonDetalles hoverRel"/>
                      </text>
        ),        
        grid.Column("", 
              header: "",
              format: @<text>
                        <input type="image" alt="Editar" src="@Url.Content("~/Content/images/edit_modify.png")" data="@(item.UsuarioId)" class="botonEditar hoverRel"/>
                      </text>
        ),
        grid.Column("", 
                header: "",
                format: @<text>
                        <input type="image" alt="Resetear contraseña" src="@Url.Content("~/Content/images/secure_locked-16.png")" data="@(item.UsuarioId)" class="botonResetearPass hoverRel"/>
                        </text>
        ),
        
        
        grid.Column("", 
              header: "",
              format: @<text>
                        <input type="image" alt="Eliminar" src="@Url.Content("~/Content/images/cancel_delete-16.png")" data="@(item.UsuarioId)" class="botonEliminar hoverRel"/>
                    
                      </text>
        )
    })

}
else
{
    @grid.GetHtml(
        tableStyle: "grid",
        fillEmptyRows: false,
        rowStyle: "gridRow",
        alternatingRowStyle: "gridAlternatingRow",
        headerStyle: "gridHeader",
        footerStyle: "gridPager",
        mode: WebGridPagerModes.All,
            firstText: "<<",
            previousText: "<",
        nextText: ">",
            lastText: " >>",
        columns: new[] {
        grid.Column("Nombre", header: "Nombre"),
        grid.Column("Apellido", header: "Apellido"),
        grid.Column("TipoUsuario.Descripcion", header: "TipoUsuarioId"),
   
        grid.Column("", 
              header: "",
              format: @<text>
                        <input type="image" alt="Detalles" src="@Url.Content("~/Content/images/preview-16.png")" data="@(item.UsuarioId)" class="botonDetalles hoverRel"/>
                      </text>
        )
    
    })
    


}
</div>
<div id="dialog" class="dialogDiv" ></div>
<script type="text/javascript">
    $("<option value='0' selected='selected'>TODOS</option>").prependTo("#TipoUsuario");
    convertSelect("TipoUsuario");
    function OnChangeDo() { return false; }
</script>
