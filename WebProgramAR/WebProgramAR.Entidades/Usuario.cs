//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace WebProgramAR.Entidades
{
    public partial class Usuario
    {
        #region Primitive Properties
    
        public virtual int UsuarioId
        {
            get;
            set;
        }
    
        public virtual string Nombre
        {
            get;
            set;
        }
    
        public virtual string Apellido
        {
            get;
            set;
        }
    
        public virtual string Email
        {
            get;
            set;
        }
    
        public virtual System.DateTime FechaNacimiento
        {
            get;
            set;
        }
    
        public virtual System.DateTime FechaAlta
        {
            get;
            set;
        }
    
        public virtual string UsuarioNombre
        {
            get;
            set;
        }
    
        public virtual string Contrasena
        {
            get;
            set;
        }
    
        public virtual int TipoUsuarioId
        {
            get { return _tipoUsuarioId; }
            set
            {
                if (_tipoUsuarioId != value)
                {
                    if (TipoUsuario != null && TipoUsuario.TipoUsuarioId != value)
                    {
                        TipoUsuario = null;
                    }
                    _tipoUsuarioId = value;
                }
            }
        }
        private int _tipoUsuarioId;
    
        public virtual string PaisId
        {
            get { return _paisId; }
            set
            {
                if (_paisId != value)
                {
                    if (Pais != null && Pais.PaisId != value)
                    {
                        Pais = null;
                    }
                    _paisId = value;
                }
            }
        }
        private string _paisId;
    
        public virtual string ProvinciaId
        {
            get { return _provinciaId; }
            set
            {
                if (_provinciaId != value)
                {
                    if (Provincia != null && Provincia.ProvinciaId != value)
                    {
                        Provincia = null;
                    }
                    _provinciaId = value;
                }
            }
        }
        private string _provinciaId;
    
        public virtual string LocalidadId
        {
            get { return _localidadId; }
            set
            {
                if (_localidadId != value)
                {
                    if (Localidad != null && Localidad.LocalidadId != value)
                    {
                        Localidad = null;
                    }
                    _localidadId = value;
                }
            }
        }
        private string _localidadId;

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<Curso> Curso
        {
            get
            {
                if (_curso == null)
                {
                    var newCollection = new FixupCollection<Curso>();
                    newCollection.CollectionChanged += FixupCurso;
                    _curso = newCollection;
                }
                return _curso;
            }
            set
            {
                if (!ReferenceEquals(_curso, value))
                {
                    var previousValue = _curso as FixupCollection<Curso>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupCurso;
                    }
                    _curso = value;
                    var newValue = value as FixupCollection<Curso>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupCurso;
                    }
                }
            }
        }
        private ICollection<Curso> _curso;
    
        public virtual ICollection<Ejercicio> Ejercicio
        {
            get
            {
                if (_ejercicio == null)
                {
                    var newCollection = new FixupCollection<Ejercicio>();
                    newCollection.CollectionChanged += FixupEjercicio;
                    _ejercicio = newCollection;
                }
                return _ejercicio;
            }
            set
            {
                if (!ReferenceEquals(_ejercicio, value))
                {
                    var previousValue = _ejercicio as FixupCollection<Ejercicio>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupEjercicio;
                    }
                    _ejercicio = value;
                    var newValue = value as FixupCollection<Ejercicio>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupEjercicio;
                    }
                }
            }
        }
        private ICollection<Ejercicio> _ejercicio;
    
        public virtual Pais Pais
        {
            get { return _pais; }
            set
            {
                if (!ReferenceEquals(_pais, value))
                {
                    var previousValue = _pais;
                    _pais = value;
                    FixupPais(previousValue);
                }
            }
        }
        private Pais _pais;
    
        public virtual TipoUsuario TipoUsuario
        {
            get { return _tipoUsuario; }
            set
            {
                if (!ReferenceEquals(_tipoUsuario, value))
                {
                    var previousValue = _tipoUsuario;
                    _tipoUsuario = value;
                    FixupTipoUsuario(previousValue);
                }
            }
        }
        private TipoUsuario _tipoUsuario;
    
        public virtual Localidad Localidad
        {
            get { return _localidad; }
            set
            {
                if (!ReferenceEquals(_localidad, value))
                {
                    var previousValue = _localidad;
                    _localidad = value;
                    FixupLocalidad(previousValue);
                }
            }
        }
        private Localidad _localidad;
    
        public virtual Provincia Provincia
        {
            get { return _provincia; }
            set
            {
                if (!ReferenceEquals(_provincia, value))
                {
                    var previousValue = _provincia;
                    _provincia = value;
                    FixupProvincia(previousValue);
                }
            }
        }
        private Provincia _provincia;
    
        public virtual ICollection<ReglasSeguridad> ReglasSeguridads
        {
            get
            {
                if (_reglasSeguridads == null)
                {
                    var newCollection = new FixupCollection<ReglasSeguridad>();
                    newCollection.CollectionChanged += FixupReglasSeguridads;
                    _reglasSeguridads = newCollection;
                }
                return _reglasSeguridads;
            }
            set
            {
                if (!ReferenceEquals(_reglasSeguridads, value))
                {
                    var previousValue = _reglasSeguridads as FixupCollection<ReglasSeguridad>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupReglasSeguridads;
                    }
                    _reglasSeguridads = value;
                    var newValue = value as FixupCollection<ReglasSeguridad>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupReglasSeguridads;
                    }
                }
            }
        }
        private ICollection<ReglasSeguridad> _reglasSeguridads;

        #endregion
        #region Association Fixup
    
        private void FixupPais(Pais previousValue)
        {
            if (previousValue != null && previousValue.Usuario.Contains(this))
            {
                previousValue.Usuario.Remove(this);
            }
    
            if (Pais != null)
            {
                if (!Pais.Usuario.Contains(this))
                {
                    Pais.Usuario.Add(this);
                }
                if (PaisId != Pais.PaisId)
                {
                    PaisId = Pais.PaisId;
                }
            }
        }
    
        private void FixupTipoUsuario(TipoUsuario previousValue)
        {
            if (previousValue != null && previousValue.Usuario.Contains(this))
            {
                previousValue.Usuario.Remove(this);
            }
    
            if (TipoUsuario != null)
            {
                if (!TipoUsuario.Usuario.Contains(this))
                {
                    TipoUsuario.Usuario.Add(this);
                }
                if (TipoUsuarioId != TipoUsuario.TipoUsuarioId)
                {
                    TipoUsuarioId = TipoUsuario.TipoUsuarioId;
                }
            }
        }
    
        private void FixupLocalidad(Localidad previousValue)
        {
            if (previousValue != null && previousValue.Usuario.Contains(this))
            {
                previousValue.Usuario.Remove(this);
            }
    
            if (Localidad != null)
            {
                if (!Localidad.Usuario.Contains(this))
                {
                    Localidad.Usuario.Add(this);
                }
                if (LocalidadId != Localidad.LocalidadId)
                {
                    LocalidadId = Localidad.LocalidadId;
                }
            }
        }
    
        private void FixupProvincia(Provincia previousValue)
        {
            if (previousValue != null && previousValue.Usuario.Contains(this))
            {
                previousValue.Usuario.Remove(this);
            }
    
            if (Provincia != null)
            {
                if (!Provincia.Usuario.Contains(this))
                {
                    Provincia.Usuario.Add(this);
                }
                if (ProvinciaId != Provincia.ProvinciaId)
                {
                    ProvinciaId = Provincia.ProvinciaId;
                }
            }
        }
    
        private void FixupCurso(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Curso item in e.NewItems)
                {
                    item.Usuario = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Curso item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                }
            }
        }
    
        private void FixupEjercicio(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (Ejercicio item in e.NewItems)
                {
                    item.Usuario = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (Ejercicio item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                }
            }
        }
    
        private void FixupReglasSeguridads(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ReglasSeguridad item in e.NewItems)
                {
                    item.Usuario = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ReglasSeguridad item in e.OldItems)
                {
                    if (ReferenceEquals(item.Usuario, this))
                    {
                        item.Usuario = null;
                    }
                }
            }
        }

        #endregion
    }
}
