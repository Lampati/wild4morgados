//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace WebProgramAR.Entidades
{
    public partial class Columna
    {
        #region Primitive Properties
    
        public virtual int ColumnaId
        {
            get;
            set;
        }
    
        public virtual string Nombre
        {
            get;
            set;
        }
    
        public virtual int TipoId
        {
            get { return _tipoId; }
            set
            {
                if (_tipoId != value)
                {
                    if (Tipo != null && Tipo.TipoId != value)
                    {
                        Tipo = null;
                    }
                    _tipoId = value;
                }
            }
        }
        private int _tipoId;
    
        public virtual int TablaId
        {
            get { return _tablaId; }
            set
            {
                if (_tablaId != value)
                {
                    if (Tabla != null && Tabla.TablaId != value)
                    {
                        Tabla = null;
                    }
                    _tablaId = value;
                }
            }
        }
        private int _tablaId;

        #endregion
        #region Navigation Properties
    
        public virtual Tabla Tabla
        {
            get { return _tabla; }
            set
            {
                if (!ReferenceEquals(_tabla, value))
                {
                    var previousValue = _tabla;
                    _tabla = value;
                    FixupTabla(previousValue);
                }
            }
        }
        private Tabla _tabla;
    
        public virtual Tipo Tipo
        {
            get { return _tipo; }
            set
            {
                if (!ReferenceEquals(_tipo, value))
                {
                    var previousValue = _tipo;
                    _tipo = value;
                    FixupTipo(previousValue);
                }
            }
        }
        private Tipo _tipo;
    
        public virtual ICollection<ReglasSeguridad> ReglasSeguridads
        {
            get
            {
                if (_reglasSeguridads == null)
                {
                    var newCollection = new FixupCollection<ReglasSeguridad>();
                    newCollection.CollectionChanged += FixupReglasSeguridads;
                    _reglasSeguridads = newCollection;
                }
                return _reglasSeguridads;
            }
            set
            {
                if (!ReferenceEquals(_reglasSeguridads, value))
                {
                    var previousValue = _reglasSeguridads as FixupCollection<ReglasSeguridad>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupReglasSeguridads;
                    }
                    _reglasSeguridads = value;
                    var newValue = value as FixupCollection<ReglasSeguridad>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupReglasSeguridads;
                    }
                }
            }
        }
        private ICollection<ReglasSeguridad> _reglasSeguridads;

        #endregion
        #region Association Fixup
    
        private void FixupTabla(Tabla previousValue)
        {
            if (previousValue != null && previousValue.Columnas.Contains(this))
            {
                previousValue.Columnas.Remove(this);
            }
    
            if (Tabla != null)
            {
                if (!Tabla.Columnas.Contains(this))
                {
                    Tabla.Columnas.Add(this);
                }
                if (TablaId != Tabla.TablaId)
                {
                    TablaId = Tabla.TablaId;
                }
            }
        }
    
        private void FixupTipo(Tipo previousValue)
        {
            if (previousValue != null && previousValue.Columnas.Contains(this))
            {
                previousValue.Columnas.Remove(this);
            }
    
            if (Tipo != null)
            {
                if (!Tipo.Columnas.Contains(this))
                {
                    Tipo.Columnas.Add(this);
                }
                if (TipoId != Tipo.TipoId)
                {
                    TipoId = Tipo.TipoId;
                }
            }
        }
    
        private void FixupReglasSeguridads(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ReglasSeguridad item in e.NewItems)
                {
                    item.Columna = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ReglasSeguridad item in e.OldItems)
                {
                    if (ReferenceEquals(item.Columna, this))
                    {
                        item.Columna = null;
                    }
                }
            }
        }

        #endregion
    }
}
